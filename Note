# PAT KEY: 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


# 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





#  user = User.find(params[:id])
#         candidates = user.candidates || []

#         usr = user.to_json(except: %i[created_at updated_at])
#         user1 = JSON.parse(usr)

#         # option = {
#         #   include: [candidates: {include: [:projects]}]
#         # }

#         # render json: UserSerializer.new(user, option)

#         # candi = CandidatesProject.where(candidate_id:candidates.ids)
#         # candid = candi.to_json(include: [:candidate, :project])
#         # can = JSON.parse(candid)

#         # candidate = user.to_json(except: %i[created_at updated_at], include: [candidates: { except: %i[created_at updated_at], include: [projects: {except: %i[created_at updated_at]}]} ])
#         # candi = JSON.parse(candidate)

#         project = candidates.to_json(except: %i[created_at updated_at user_id], include: [projects: { only: %i[id name description bill]}])
#         projects = JSON.parse(project)

#         # render json: candidates.to_json(except: %i[created_at updated_at user_id], include: [projects: { only: %i[id name description bill]}])
#         # project1 = JSON.parse(proj1)
#         # projects1 = JSON.parse(project1)

#         render json: { status: 'Success', message: 'User found', user: user1, candidates: projects }, status: :ok

#       rescue StandardError
#         render json: { status: 'Error', message: 'User not found' }, status: 404

#       end











# bundle exec bin/rails s



# 25th line : config.generators.system_tests = nil

# 36th line : config.load_defaults 6.1





# <a href="/portfolios/<%= f.id %>/edit">Edit two</a>



# 10.times do |blog|
# 	Blog.create!(
# 		title: "my Blog post#{blog}",
# 		body: "This is body of blog post"
# 	)
# end

# puts "10 blogs created"

# 5.times do |skill|
# 	Skill.create!(
# 		title: "Rails #{skill}",
# 		percent_utilized: 15
# 	)
# end

# puts "5 skills cerated"

# 9.times do |portfolio_item|
# 	Portfolios.create!(
# 		title: "portfolio title#{portfolio_item}",
# 		subtitle: "My great service",
# 		body: "This is body of portfolio post",
# 		main_image: "https://picsum.photos/200/300",
# 		thumb_image: "https://picsum.photos/100/100",
# 	)
# end













# <%= form_for @users.new do |f| %>
# 	<div>
# 		<%= f.label :name %>
# 		<%= f.text_field :name, placeholder: "Enter_name" %>
# 	</div>
# 	<br>
# 	<div>
# 		<%= f.label :email %>
# 		<%= f.text_field :email,placeholder: "Enter_email" %>
# 	</div>
# 	<br>
# 	<div>
# 		<%= link_to "Add", new_user_path(@user) %>
# 	</div>

# 	<br>
# 	<div>
# 		<%= f.submit value="New User" %>
# 	</div>
# 	<br>
# <% end -%>









# <strong><%= p.label :description  %> : </strong>
# <%= p.text_field :description, placeholder: "Description" %>
# <%= p.submit value="Add Description" %>












# #........................................................

# 	# def create
# 	# 	@user=User.new
# 	# 	@post=@user.posts.build(post_params)
# 	# 	if @post.save
# 	# 		redirect_to users_path 
# 	# 	else
# 	# 		render :new
# 	# 	end
# 	# end

# #............................................................

# 	# def update
# 	# 	@user=User.new
# 	# 	@post=@user.posts.find(params[:id])
# 	# 	if @post.update(post_params)
# 	# 		redirect_to posts_path
# 	# 	else
# 	# 		render :edit
# 	# 	end
# 	# end

# #.......................................................

# 	# def destroy
# 	# 	@user=User.new
# 	# 	@post=@user.posts.find(params[:user_id])
# 	# 	@post.destroy
# 	# 	redirect_to users_path
# 	# end


# #........................................................

# 	def post_params
# 		params.require(:post).permit(:description)
# 	end
# #........................................................




# <td><%= user.posts.each do |post| %></td>
#   				<td><%= post.description %></td>
#   				<td><% end %></td>
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
  				
#   				:reject_if => proc {|attrs| attrs['description'].blank?},
# 								   :allow_destroy => true
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
								   
# <strong>Description:</strong>
# <% @users.posts.each do |p| %>
# <%= p.description %>
# <% end -%><br><br>






# <div>
# 		<%= user.fields_for :posts do |post| %>
# 		<%= post.label :description %>
# 		<%= post.text_field :description %>
# 		<% end -%>
# 	</div>

# 	<br>
	
	
	
	



# <h1>New Post</h1>


# <%= form_for @user do |post| %>
# <%= post.label :name %>
# <%= post.text_field :name %>
# <%= post.label :email %>
# <%= post.text_field :email %>
# <%= post.fields_for :posts do |p|%>
# <%= p.label :description %>
# <%= p.text_field :description %>
# <% end %>
# <%= post.submit %>
# <% end %>								   






# body {
#   background-color: #fff;
#   color: #333;
#   margin: 33px; }

# body, p, ol, ul, td {
#   font-family: verdana, arial, helvetica, sans-serif;
#   font-size: 13px;
#   line-height: 18px; }

# pre {
#   background-color: #eee;
#   padding: 10px;
#   font-size: 11px; }

# a {
#   color: #000; }

# a:visited {
#   color: #666; }

# a:hover {
#   color: #fff;
#   background-color: #000; }

# th {
#   padding-bottom: 5px; }

# td {
#   padding: 0 5px 7px; }

# div.field,
# div.actions {
#   margin-bottom: 10px; }

# #notice {
#   color: green; }

# .field_with_errors {
#   padding: 2px;
#   background-color: red;
#   display: table; }

# #error_explanation {
#   width: 450px;
#   border: 2px solid red;
#   padding: 7px 7px 0;
#   margin-bottom: 20px;
#   background-color: #f0f0f0; }

# #error_explanation h2 {
#   text-align: left;
#   font-weight: bold;
#   padding: 5px 5px 5px 15px;
#   font-size: 12px;
#   margin: -7px -7px 0;
#   background-color: #c00;
#   color: #fff; }

# #error_explanation ul li {
#   font-size: 12px;
#   list-style: square; }

# label {
#   display: block; }




# <div>
# 		<%= f.fields_for :posts do |post| %>
# 		<%= post.label :description %>
# 		<%= post.text_field :description %>
# 		<% end -%>
# 	</div>	
	
	
	
	
	
	
	
#  <p class="notice"><%= notice %></p>
#     <p class="alert"><%= alert %></p>


#     <% if current_user %>
#     <%= link_to "Logout", destroy_user_session_path, method: :delete %>

#     <% else %>
#     <%= link_to "Register", new_user_registration_path %>
#     <%= link_to "Login", new_user_session_path %>
      
#     <% end %>		
    
    
    
    
#     <%- if controller_name != 'sessions' %>
#   <%= link_to "Log in", new_session_path(resource_name) %><br /><br>
# <% end %>

# <%- if devise_mapping.registerable? && controller_name != 'registrations' %>
#   <%= link_to "Sign up", new_registration_path(resource_name) %><br><br>
# <% end %>





# btn btn-outline-success	







# <% if user_signed_in? %>
#         <li class="nav-item">
#           <%= link_to 'SignOut', destroy_user_session_path, method: :delete, class:"nav-link"%>
#         </li>
#         <li class="nav-item">
#           <%= link_to 'EditProfile', edit_user_registration_path, class:"nav-link"%>
#         </li>

#         <% else %>
#         <li class="nav-item">
#           <%= link_to 'SignUp', new_user_registration_path, class:"nav-link"%>
#         </li>
#         <li class="nav-item">
#           <%= link_to 'SignIn', new_user_session_path, class:"nav-link"%>
#         </li>
#         <% end %>


#         <li class="nav-item">
#           <%= link_to 'CurrentUser', users_url, class:"nav-link"%>
#         </li>
#         <li class="nav-item">
#           <%= link_to 'Home', pages_path, class:"nav-link"%>
#         </li>
#         <li class="nav-item">
#           <%= link_to 'Main', pages_path, class:"nav-link"%>
#         </li>	
        
        
        
        
        
        
        
        
        
        
        
        
# before_action :set_copyright

# 	def set_copyright
# 		@copyright=DevcampViewTool::Render.copyright 'Ashok', 'All rights reserved'
# 	end
	
	
	
	
	
	
	
	
	
	
	
	

# Rails.application.config.middleware.insert_before 0, Rack::Cors do
#   allow do
#     origins 'example.com'

#     resource '*',
#       headers: :any,
#       methods: [:get, :post, :put, :patch, :delete, :options, :head]
#   end
# end



# # if user&.valid_password?(params[:password])
# 				# 	render json: {status: 'Success', message: 'Authorized users'}, status: :ok
# 				# else
# 				# 	render json: {status: 'Error', message: 'Wrong password'}, status: :ok
# 				# end
# 				#end














# <% @users.each do |user| %>
# <%= user.name %><br>
# <%= user.email %><br>
# <%= user.role %><br>
# <% end %>


















# # extend ActiveSupport::Concern

# 	# included do
# 	# 	before_action :set_candidates
# 	# end

# 	# def set_candidates
# 	# 	# if current_user
# 	# 	# 	candidate = Candidate.new(user_id:current_user.id, name:current_user.name, email:current_user.email)
# 	# 	# 		if candidate.save
# 	# 	# 			#format.html{respond_to users_path}
# 	# 	# 		end
# 	# 	# end

# 	# 	if user
# 	# 		candidate = Candidate.new(user_id:user.id, name:user.name, email:user.email)
# 	# 		if candidate.save
# 	# 			render json: {status: 'Success', message: 'Saved project', data:project}, status: :ok
# 	# 		else
# 	# 			render json: {status: 'Error', message: 'Project not saved', data:project}, status: :ok
# 	# 		end

# 	# 	end
# 	# end



#         # render json: candidates.to_json(include: [:user])

#         # hash = Hash.new
#         # if (candidates.exists?)
#         #   for i in 0...candidates.size

#         #     hash[i] = Array.new
#         #     hash[i] << candidates[i]
#         #     hash[i] << (candidates[i].projects)
#         #   end
#         # end

#         # projects = Array.new
#         # i = 0
#         # hash.each do |key, val|
#         #  projects[i] = val.flatten
#         #   i = i + 1
#         # end

#       # [:user, :projects => {only: [:name, :description,:idle,:realtime,:bill]}]
      
      
      
      
#      render json: cndidates.to_json(includes: [:user])
     
#      hash = Hash.new
#      if (candidates.exist?)
#      for i in 0...candidates.size
#      hash[i] = Array.new
#      hash[i] << candidates[i]
#      hash[i] << candidates[i].projects
#      end
#      end
     
#      projects = Array.new
#      i = 0 
#      hash.each do |k,v|
#      projects[i] = val.flatten
#      i = i + 1
#      end
     
     
#      # render json: { status: 'Success', message: 'Authorized user' }, status: :ok
#             # if (candidate = Candidate.where(user_id: user.id)) , data: candidate 
#             # end
            
            
            
            
            
            
#   def success!(payload = {}, code = nil)
#     code ||= :ok
#     render json: { success: 'Success', payload: payload }, status: code
#   end

#   def fail!(errors, code = nil)
#     msg = errors if errors.is_a? String
#     code ||= :unprocessable_entity
#     render json: { success: 'Error', errors: msg }, status: code
#   end
			   